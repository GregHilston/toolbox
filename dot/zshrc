# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="gnzh_customized_by_grehg"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# History settings, used this as a start point https://unix.stackexchange.com/a/273863/180341

HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVEHIST=100000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git 
  colored-man-pages 
  colorize 
  github 
  vagrant 
  virtualenv 
  pip 
  python 
  brew 
  osx 
  zsh-syntax-highlighting 
  zsh-autosuggestions
  web-search 
  jsontools 
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

HOSTNAME=$(hostname)

# displays which virtual environment you're working on 
export VIRTUAL_ENV_DISABLE_PROMPT=

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# OPAM configuration
. /Users/ghilston/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# required by rbenv
# eval "$(rbenv init -)"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
# export PATH="$PATH:$HOME/.rvm/bin"

# So flutter is in path
# export PATH="$PATH:/Users/ghilston/Git/flutter_projects/flutter/bin"

# So Snap installations are in path
export PATH="$PATH:/snap/bin"

# So binaries I install are in path (jetbrains toolbox for ex)
# This is probably very out of date...
export PATH="$PATH:/home/ghilston/bin"


gitAllHistory() {
  git log --follow -p -- $@
}

gitCommitUndo() {
  git reset --soft HEAD\^
}

youtubeToAudio() {
  youtube-dl -ci -f "bestaudio[ext=m4a]" $@
}

recursivelySearchForString() {
  if hash rg 2>/dev/null; then
    rg ${1}
  else
    echo "ripgrep not installed, falling back on grep"
    grep -niro ${1} $PWD
  fi
}

recursivelySearchForFile() {
  find . -name ${1}
}

sessionDs(){
  # Need a better way to reference this path
  ~/Git/toolbox/bin/session_ds_corpus.sh
}

githubRemote() {
 ~/Git/toolbox/bin/github.sh
}

dockerClearContainers() {
    docker rm -f $(docker ps -a -q)
}

dockerClearImages() {
    docker rmi -f $(docker images -a -q)
}

dockerClearVolumes() {
    docker volume rm $(docker volume ls -q)
}

dockerClearNetworks() {
    docker network rm $(docker network ls | tail -n+2 | awk '{if($2 !~ /bridge|none|host/){ print $1 }}')
}

# next two commands allow one to capture and restore the output of the last bash command
# from https://stackoverflow.com/a/58598185/1983957

# capture the output of a command so it can be retrieved with ret
cap() { 
    tee /tmp/capture.out
}

# return the output of the most recent command that was captured by cap
ret() {
    cat /tmp/capture.out
}

# The next two lines edited by google cloud sdk, if its not working, look at https://gist.github.com/dwchiang/10849350
# The next line updates PATH for the Google Cloud SDK.
# Disabling cause not on mac anymore
# if [ -f '/Users/ghilston/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/ghilston/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
# Disabling cause not on mac anymore
if [ -f '/Users/ghilston/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/ghilston/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# Add binary files from teaching-java to path
# Disabling as not teaching anymore
# export PATH=~/Git/teaching-java/bin:$PATH

# adding the location of thefuck to our path
export PATH="$PATH:~/.local/bin/"

# to handle fuck (the package that makes mispells easier to rerun correctly)
# eval $(thefuck --alias)
alias fuck='$(thefuck $(fc -ln -1))'

# to allow awscli script to be found
export PATH=/usr/local/bin/python3:$PATH

alias python='/usr/bin/python3'

# adds brew command to path
# not installed by default
# eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

# This is incorrect, as we load from the home directory
# SCRIPT_HOME=$(cd "$(dirname $0)" && pwd)
# TOOLBOX_HOME=$(echo $SCRIPT_HOME | rev | cut -d/ -f2- | rev)

# harcoding for now
TOOLBOX_HOME=~/Git/toolbox
export TOOLBOX_HOME=$TOOLBOX_HOME

# allows our binaries to be called, adding to path
export PATH=$PATH:$TOOLBOX_HOME/bin

# make the preferred editor vim, for like git merges and what not
export VISUAL=vim
export EDITOR="$VISUAL"

# only using nvim, can ues an old one by putting a \ in front of binary call, ex \vim
alias vim="nvim"
alias vi="nvim"

alias night="redshift -l 44.8:-73 -t 5800:3600 -g 0.8 -m randr -v &"
alias audio="pavucontrol"

export PATH="$HOME/.poetry/bin:$PATH"

# Adds the ~/.screenlayout directory to path, which are shell scripts written by arandr for running xrandr
export PATH="$HOME/.screenlayout:$PATH"
