" :help [command] for more information 

" installing our plugin manager "vim-plug"
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" installing vim-plug plugins
" Specify a directory for plugins
" - For Neovim: stdpath('data') . '/plugged'
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" fzf fuzzy find searching
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" pretty status bar
Plug 'itchyny/lightline.vim'

" pretty file tree
Plug 'preservim/nerdtree'

" git status on left hand column of files in a git repo
Plug 'airblade/vim-gitgutter'

" runs flake8 against python file
Plug 'nvie/vim-flake8'

" to run git commands in vim
Plug 'tpope/vim-fugitive'

" to change surronding blocks
Plug 'tpope/vim-surround'

" running linting in vim
Plug 'w0rp/ale'

map ; :Files<CR>

" Initialize plugin system
call plug#end()

" Enable lightline
set laststatus=2
" disable redundant insert display
set noshowmode

" map nerd Tree to CTRL + o
map <C-o> :NERDTreeToggle<CR>

" Visual Changes
colorscheme elflord
syntax enable     " Turn on syntax highlighting
syntax on
set number        " Shows lines numbers along left side
set ruler         " Shows file stats in bottom right corner
set visualbell    " Blink cursor on error instead of beeping 
set cursorline    " Highlights current line
set wildmenu      " Visual autocomplete for command menu

" Whitespace
" set wrap          " Visually wraps long lines
" set textwidth=80  " Max columns before wrap occurs 
set tabstop=4     " Number of spaces a tab counts for visually
set softtabstop=4 " Number of spaces a tab counts for when inserting/deleting
set expandtab     " Tabs are spaces

" Last line
set showcmd       " Shows command in bottom bar

" Searching
set incsearch     " Searches as characters are entered
set hlsearch      " Highlights matches
set ignorecase    " Ignores cases of characters to match
set showmatch     " Highlights matching [{()}]

" Set automatic indentation
set autoindent
set smartindent

" Set tabs at 4 spaces
set cindent
set sw=4 ts=4 et
set hlsearch
set incsearch

" From this link https://vi.stackexchange.com/a/5854
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>
